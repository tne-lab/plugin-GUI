PYTHON_HOME = $(CONDA_HOME)
PYTHON_INCDIR = $(CONDA_HOME)/include/python3.5m
PYTHON_LIBDIR = $(CONDA_HOME)/lib
PYTHON_RTLIBDIR = $(PYTHON_LIBDIR)

LIBNAME = $(CURDIR)
LIBNAME = $(**F)
OBJDIR = $(OBJDIR)/$(LIBNAME)
TARGET = $(LIBNAME).so
OS = $(shell uname)

SRC_DIR = ${shell find ./ -type d -print}
VPATH = $(SOURCE_DIRS)

SRC = $(foreach sdir,$(SRC_DIR),$(wildcard $(sdir)/*.cpp))
OBJ = $(addprefix $(OBJDIR)/,$(notdir $(SRC:.cpp=.o)))



#Extra macros and libraries needed by the plugin
#CXXFLAGS := $(CXXFLAGS) -D "PYTHON_HOME=$(PYTHON_HOME)" -I $(PYTHON_INCDIR)
CXXFLAGS = $(CXXFLAGS) -D "PYTHON_HOME=$(PYTHON_HOME)" -I $(PYTHON_INCDIR)
LDFLAGS = $(LDFLAGS) -lpython3.5m -L$(PYTHON_LIBDIR) -Wl,-rpath=$(PYTHON_RTLIBDIR)


BLDCMD = $(CXX) -shared -o $(OUTDIR)/$(TARGET) $(OBJ) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)

VPATH = $(SRC_DIR)

.PHONY: objdir

$(OUTDIR)/$(TARGET): objdir $(OBJ)
	-@mkdir -p $(BINDIR)
	-@mkdir -p $(LIBDIR)
	-@mkdir -p $(OUTDIR)
	@echo "Building $(TARGET)"
	@$(BLDCMD)

$(OBJDIR)/%.o : %.cpp
	@echo "Compiling $<"
	@$(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	
	
objdir:
	-@mkdir -p $(OBJDIR)

clean:
	@echo "Cleaning $(LIBNAME)"
	-@rm -rf $(OBJDIR)
	-@rm -f $(OUTDIR)/$(TARGET)

-include $(OBJ:%.o=%.d)
